<?php

namespace JsonRpcFormatter;

require_once dirname(__FILE__) . '/../../../src/JsonRpcFormatter/Message.php';

class DummyImplementation extends Message
{
	public function jsonSerialize(){}
}

/**
 * Test class for Message.
 * Generated by PHPUnit on 2012-03-28 at 21:58:27.
 */
class MessageTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var Message
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new DummyImplementation;
	}

	/**
	 * @expectedException \InvalidArgumentException
	 * @expectedExceptionMessage Decoding json string failed.
	 */
	public function testParseInvalidString()
	{
		$nonJson = "<not json>";
		$this->object->parseString($nonJson);
	}

	/**
	 * @expectedException \InvalidArgumentException
	 * Message is not tested - it is not tested object's responsibility
	 */
	public function testNotRpc()
	{
		$nonJson = "{}"; // valid json, no jsonrpc attribute
		$this->object->parseString($nonJson);
	}

	public function testGetDefaultJsonRpcParser()
	{
		$object = new \stdClass;
		$defaultParser = $this->object->getDefaultJsonRpcParser($object);
		$this->assertInstanceOf('\\JsonRpcFormatter\\JsonRpcParserInterface', $defaultParser);
	}

}

